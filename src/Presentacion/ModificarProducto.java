/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.fabricaElGuardian;
import Logica.iControladorVentas;
import Logica.producto;
import Logica.proveedor;
import Logica.utilidades;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.TableModel;

/**
 *
 * @author PabloP
 */
public class ModificarProducto extends javax.swing.JInternalFrame {
    
    iControladorVentas ICV = fabricaElGuardian.getInstance().getInstanceIControladorVentas();
    JDesktopPane escritorio = null;
    utilidades util = utilidades.getInstance();
    String path = "";
    String ruta = ICV.getRutaGuardarimgProductos();
    BufferedImage fotoProducto = null;
    BufferedImage fotoNueva = null;
    private Long idProducto = null;
    /**
     * Creates new form ModificarProducto
     */
    private iControladorVentas iCV = fabricaElGuardian.getInstance().getInstanceIControladorVentas();
    private List<proveedor> proveedores;
    private producto producto;
    private HashMap<Long, String> provCombo = new HashMap<>();
    private String rutaImagenVieja;
    
    public ModificarProducto(JDesktopPane escritorioV, long idProducto) {
        this.escritorio = escritorioV;
        this.idProducto=idProducto;
        initComponents();
        cargarProveedores();
        controlJDATE();
        cargarProducto();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lb_nombre = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtxt_cantidad = new javax.swing.JTextField();
        jtxt_precio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxt_descripcion = new javax.swing.JTextArea();
        jCB_proveedores = new javax.swing.JComboBox<>();
        lb_foto = new javax.swing.JLabel();
        btn_foto = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_aceptar = new javax.swing.JButton();
        jdc_fechaCompra = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lb_nombre.setText("Nombre");

        jLabel2.setText("Cantidad");

        jLabel3.setText("Precio");

        jLabel4.setText("Descripcion");

        jLabel5.setText("Proveedor");

        jtxt_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxt_cantidadKeyTyped(evt);
            }
        });

        jtxt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxt_precioActionPerformed(evt);
            }
        });
        jtxt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxt_precioKeyTyped(evt);
            }
        });

        jtxt_descripcion.setColumns(20);
        jtxt_descripcion.setRows(5);
        jScrollPane1.setViewportView(jtxt_descripcion);

        jCB_proveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lb_foto.setText("FOTO");

        btn_foto.setText("Seleccionar Foto");
        btn_foto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fotoActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        jLabel6.setText("Fecha Compra");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxt_cantidad, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxt_precio, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCB_proveedores, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(lb_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(21, 21, 21)
                        .addComponent(jdc_fechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_foto, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(lb_foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_cancelar)
                .addGap(63, 63, 63)
                .addComponent(btn_aceptar)
                .addGap(56, 56, 56))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_nombre)
                    .addComponent(btn_foto))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtxt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtxt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jCB_proveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jdc_fechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar)
                    .addComponent(btn_aceptar))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxt_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_cantidadKeyTyped
        util.numerosYcomas(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jtxt_cantidadKeyTyped

    private void jtxt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxt_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxt_precioActionPerformed

    private void jtxt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_precioKeyTyped
        util.numerosYcomas(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jtxt_precioKeyTyped

    private void btn_fotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fotoActionPerformed
        selecImagen();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_fotoActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        modificarProducto();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_aceptarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_foto;
    private javax.swing.JComboBox<String> jCB_proveedores;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdc_fechaCompra;
    private javax.swing.JTextField jtxt_cantidad;
    private javax.swing.JTextArea jtxt_descripcion;
    private javax.swing.JTextField jtxt_precio;
    private javax.swing.JLabel lb_foto;
    private javax.swing.JLabel lb_nombre;
    // End of variables declaration//GEN-END:variables

    private void selecImagen() {
        BufferedImage image = util.levantarImagen(jtxt_cantidad);
        lb_foto.setIcon(new ImageIcon(image));
        System.out.println(lb_foto.getWidth() + "//" + lb_foto.getHeight());
        Image scaledInstance = image.getScaledInstance(lb_foto.getWidth(), lb_foto.getHeight(), Image.SCALE_DEFAULT);
        lb_foto.setIcon(new ImageIcon(scaledInstance));
        fotoNueva = image;
        
    }
    
    private void modificarProducto() {
        if (JOptionPane.showConfirmDialog(this, "Desea modificar el producto: " + producto.getNombre()) == 0) {
            if (validarDatos()) {
                if (modificar()) {
                    if (ICV.ModificarProducto(producto)) {
                        JOptionPane.showMessageDialog(this, "Se modifico el producto: " + producto.getNombre());
                        limpiar();
                        recargarPadre();
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No modifico la informacion del producto!");
                }
                
            }
        }
        
    }
    
    private String generarNombreFoto() {
        
        String nombre;
        nombre = "PRODUCTO" + lb_nombre.getText() + "_" + "PROVEEDOR" + jCB_proveedores.getSelectedItem();
        return nombre;
    }
    
    private void cargarProveedores() {
        this.proveedores = (List<proveedor>) ICV.getProveedores();
        
        JComboBox<String> nuevoCombo = new JComboBox<>();
        
        if (proveedores.size() > 0) {
            nuevoCombo.addItem("Seleccionar Proveedor");
            for (proveedor p : proveedores) {
                String nuevoValor = p.getId() + "--" + "Nombre: " + p.getNombreProveedor();
                nuevoCombo.addItem(nuevoValor);
                provCombo.put(p.getId(), nuevoValor);
            }
        } else {
            nuevoCombo.addItem("No hay proveedores");
        }
        jCB_proveedores.setModel(nuevoCombo.getModel());
    }
    
    private boolean validarDatos() {
        
        if (jtxt_cantidad.getText().length() <= 0) {
            JOptionPane.showMessageDialog(this, "Debe ingresar una cantidad!");
            jtxt_cantidad.requestFocus();
            return false;
        }
        if (jtxt_precio.getText().length() <= 0) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un precio!");
            jtxt_precio.requestFocus();
            return false;
        } else {
            if (Float.valueOf(jtxt_precio.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un precio valido!");
                return false;
            }
            
        }
        if (jCB_proveedores.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccecionar un proveedor!");
            jCB_proveedores.requestFocus();
            return false;
            
        }
        if (jdc_fechaCompra.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha!");
            jdc_fechaCompra.requestFocus();
            return false;
        }
        return true;
    }
    
    private proveedor getProveedorSeleccionado() {
        String selectedItem = (String) jCB_proveedores.getSelectedItem();
        return ICV.getProveedor(getIdProveedor(selectedItem));
    }
    
    private void limpiar() {
        cargarProveedores();
        jtxt_cantidad.setText(null);
        jtxt_descripcion.setText(null);
        jtxt_precio.setText(null);
        lb_foto.setIcon(null);
    }
    
    private void recargarPadre() {
        JInternalFrame[] allFrames = this.escritorio.getAllFrames();
        for (JInternalFrame jif : allFrames) {
            if (jif instanceof ListarProductos) {
                ListarProductos prod = (ListarProductos) jif;
                prod.cargarTablas();
            }
        }
    }
    
    private long getIdProveedor(String selectedItem) {
        String[] split = selectedItem.split("--");
        return Long.valueOf(split[0]);
    }
    
    private void cargarProducto() {
        this.producto = iCV.getProducto(idProducto);
        lb_nombre.setText("Nombre: " + producto.getNombre() + " Codigo: " + idProducto);
        jtxt_cantidad.setText(String.valueOf(producto.getCantidad()));
        jtxt_precio.setText(String.valueOf(producto.getPrecio()));
        jtxt_descripcion.setText(producto.getDescripcion());
        jCB_proveedores.setSelectedItem(provCombo.get(producto.getProveedor().getId()));
        jdc_fechaCompra.setDate(producto.getFechaDeCompra());
        levantarImg(producto.getFoto());
        
    }
    
    public void levantarImg(String rutImg) {
        BufferedImage image = (BufferedImage) util.dameEstaImagen(ICV.getRutaImgProducto() + "/" + rutImg);
        lb_foto.setIcon(new ImageIcon(rutImg));
        Image scaledInstance = image.getScaledInstance(231, 184, Image.SCALE_DEFAULT);
        lb_foto.setIcon(new ImageIcon(scaledInstance));
        fotoProducto = image;
        this.rutaImagenVieja = ICV.getRutaImgProducto() + "/" + rutImg;
    }
    
    private boolean modificar() {
        boolean resultado = false;
        if (this.producto.getCantidad() != Integer.parseInt(jtxt_cantidad.getText()) && Integer.parseInt(jtxt_cantidad.getText()) >= 0) {
            producto.setCantidad(Integer.parseInt(jtxt_cantidad.getText()));
            setearCanntidadProducto(producto, Integer.parseInt(jtxt_cantidad.getText()));
            resultado = true;
        }
        if (this.producto.getPrecio() != Float.valueOf(jtxt_precio.getText()) && Float.valueOf(jtxt_precio.getText()) > 0) {
            producto.setPrecio(Float.valueOf(jtxt_precio.getText()));
            resultado = true;
        }
        if (this.producto.getDescripcion() != null) {//pregunto si tiene descripcion
            if (jtxt_descripcion.getText().length() > 0) {
                if (!producto.getDescripcion().equals(jtxt_descripcion.getText())) {
                    
                    producto.setDescripcion(jtxt_descripcion.getText());
                    resultado = true;
                }
            } else {
                producto.setDescripcion(null);
                resultado = true;
            }
        }
        if (!producto.getProveedor().equals(getProveedorSeleccionado())) {
            producto.setProveedor(getProveedorSeleccionado());
            resultado = true;
        }
        if (fotoNueva != null) {
            util.eliminarArchivo(new File(ICV.getRutaImgProducto() + "/" + producto.getFoto()));
            util.salvarImagen(fotoNueva, ICV.getRutaImgProducto(), producto.getFoto(), 0);
            
        }
        if (!this.producto.getFechaDeCompra().equals(jdc_fechaCompra.getDate())) {
            producto.setFechaDeCompra(jdc_fechaCompra.getDate());
            resultado = true;
        }
        return resultado;
    }
    
    private void controlJDATE() {
        
        Date min = util.getFechaActual();//fecha minima
        //Date max = utilidades.sumaRestaDias(util.getFechaActual(), 7);//fecha maxima 7 dias a partir de la actual
        jdc_fechaCompra.getDateEditor().setEnabled(false);//desabilito el jtext editor
        jdc_fechaCompra.setMaxSelectableDate(min);//seteo ma fecha maxima
        // jdc_fechaCompra.setMinSelectableDate(min);//seteo la fecha minima
        //en este evento se le pueden agregar llamadas a opciones mentodos etc que se ejecutan cuando cambia la fecha (uso la interfaz lambda)
        /* JDTFechaReserva.getDateEditor().addPropertyChangeListener((PropertyChangeEvent e) -> {
            JOptionPane.showMessageDialog(rootPane, "la fecha es " + JDTFechaReserva.getDate());
        // btn_turno.setEnabled(false);
        });*/
        
    }
    
    private void setearCanntidadProducto(producto producto, int cantNueva) {
        int cantAct = producto.getCantidad();
        if (cantNueva == 0) {
            producto.setCantidad(0);
            producto.setDisponible(false);
            producto.setEstado(iCV.getEstado(2));
            
        }
        if (cantNueva > 0) {
            if (cantAct == 0) {
                producto.setCantidad(cantNueva);
                producto.setDisponible(true);
                producto.setEstado(iCV.getEstado(1));
            }
        }
        
    }
}
