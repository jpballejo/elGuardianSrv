/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.ControladorReservas;
import Logica.banio;
import Logica.controladorServicios;
import Logica.servicio;
import Logica.tipoBanio;
import Logica.tipoEsquila;
import Logica.utilidades;
import Persistencia.persistencia;
import java.awt.Container;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jp
 */
public class JIF_ingresoDatosServicio extends javax.swing.JInternalFrame {

    private controladorServicios contSrv = controladorServicios.getInstance();
    int tipoServicio = 0;
    ControladorReservas contR = ControladorReservas.getInstance();
    Persistencia.persistencia per = persistencia.getInstance();
    utilidades util = utilidades.getInstance();
    JDesktopPane jPadre = null;

    /**
     * Creates new form JIF_ingresoDatosServicio
     */
    public JIF_ingresoDatosServicio(int tipoSer, JDesktopPane escritorio) {
        this.jPadre = escritorio;
        this.tipoServicio = tipoSer;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxt_nombre = new javax.swing.JTextField();
        jtxt_precio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtxt_descripcion = new javax.swing.JTextArea();
        btn_aceptar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        jLabel1.setText("Nombre");

        jLabel2.setText("Precio $");

        jLabel3.setText("Descripcion");

        jtxt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxt_precioKeyTyped(evt);
            }
        });

        Jtxt_descripcion.setColumns(20);
        Jtxt_descripcion.setRows(5);
        jScrollPane1.setViewportView(Jtxt_descripcion);

        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxt_nombre)
                                .addGap(174, 174, 174))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(btn_aceptar)
                        .addGap(33, 33, 33)
                        .addComponent(btn_cancelar)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_aceptar)
                    .addComponent(btn_cancelar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_precioKeyTyped
        util.numerosYcomas(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jtxt_precioKeyTyped

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed

        if (continuar()) {
            altaServicio();
        }


    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiar();
//con este codigo llamo al cargar del jif padre
        recargarpadre();

        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Jtxt_descripcion;
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtxt_nombre;
    private javax.swing.JTextField jtxt_precio;
    // End of variables declaration//GEN-END:variables

    private void altaServicio() {
        if (validarCampos()) {
            if (this.tipoServicio == 0) {
                if (altaTipoBanio()) {
                    JOptionPane.showMessageDialog(this, "Se ha agregado el tipo de Ba√±o: " + jtxt_nombre.getText());
                    limpiar();
                    recargarpadre();
                    this.dispose();
                }
            }
            if (this.tipoServicio == 1) {
                if (altaTipoEsquila()) {
                    JOptionPane.showMessageDialog(this, "Se ha agregado el tipo de Esquila: " + jtxt_nombre.getText());
                    limpiar();
                    recargarpadre();
                    this.dispose();

                }
            }
            contSrv.cargarTiposServicios();
        }

    }

    private boolean validarCampos() {
        if (jtxt_nombre.getText() == null) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un nombre para el Tipo  de Servicio!");
            jtxt_nombre.requestFocus();
            return false;
        }
        if (jtxt_precio.getText() == null) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un precio para el Servicio!");
            jtxt_precio.requestFocus();
            return false;
        }
        if (Jtxt_descripcion.getText() == null) {
            JOptionPane.showMessageDialog(this, "Debe ingresar una descripcion del Servicio!");
            Jtxt_descripcion.requestFocus();
            return false;
        }

        return true;
    }

    private boolean altaTipoBanio() {
        tipoBanio tipobanio = new tipoBanio();
        tipobanio.setDescripcion(Jtxt_descripcion.getText());
        tipobanio.setTipoBanio(jtxt_nombre.getText());
        tipobanio.setPrecio(Float.valueOf(jtxt_precio.getText()));
        if (!per.existe(tipobanio)) {
            return contR.nuevoBanio(tipobanio);
        }
        return false;

    }

    private boolean altaTipoEsquila() {
        tipoEsquila tipoesquila = new tipoEsquila();
        tipoesquila.setDescripcion(Jtxt_descripcion.getText());
        tipoesquila.setTipoEsquila(jtxt_nombre.getText());
        tipoesquila.setPrecio(Float.valueOf(jtxt_precio.getText()));
        if (!per.existe(tipoesquila)) {
            return contR.nuevaEaquila(tipoesquila);
        }
        return false;
    }

    private void limpiar() {
        jtxt_nombre.setText(null);
        jtxt_precio.setText(null);
        Jtxt_descripcion.setText(null);
    }

    private boolean continuar() {
        int res = JOptionPane.showConfirmDialog(this, "Desea agregar el nuevo tipo de servicio: " + jtxt_nombre.getText());
        if (res == 0) {
            return true;
        }

        return false;
    }

    private void recargarpadre() {
        JInternalFrame[] allFrames = this.jPadre.getAllFrames();
        for (JInternalFrame jif : allFrames) {

            if (jif instanceof JIF_esquilaBa√±o) {
                JIF_esquilaBa√±o esqBan = (JIF_esquilaBa√±o) jif;
                esqBan.cargarServicios();
            }
        }
    }

}
