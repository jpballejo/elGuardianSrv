/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.controladorCliente;
import Logica.fabricaElGuardian;
import Logica.mascota;
import Logica.utilidades;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jp
 */
public class JIF_animalModificar extends javax.swing.JInternalFrame {

    mascota msc = null;
    JFileChooser navegadorArchivos = new JFileChooser();
    private BufferedImage fotoMascota, fotoMascotaNueva;
    //  private final JDesktopPane escritorio;
    private controladorCliente contC = (controladorCliente) fabricaElGuardian.getInstance().getInstanceIControladorCliente();
    private DefaultListModel modelo = null;
    private HashMap<String, String> clientes = new HashMap<>();
    String rutaFoto = "/home/jp/Escritorio/elGuardianServidor/ImagenesMascotas/";
    private final Long idMascota;
    utilidades util = utilidades.getInstance();
    private DefaultListModel dlm = new DefaultListModel();
    private final JDesktopPane jPadre;

    /**
     * Creates new form JIF_animalModificar
     *
     * @param idMascota
     */
    public JIF_animalModificar(Long idMascota, JDesktopPane escritorio) {
        initComponents();
        this.idMascota = idMascota;
        this.jPadre = escritorio;
        cargarRazas();
        cargarMascota();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        JLab_nombreCliente = new javax.swing.JLabel();
        JLab_cedula = new javax.swing.JLabel();
        JLab_nomMascota = new javax.swing.JLabel();
        JText_nomMascota = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListRaza = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtA_descricpcion = new javax.swing.JTextArea();
        JLab_descripcion = new javax.swing.JLabel();
        btn_foto = new javax.swing.JButton();
        btn_aceptar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jText_buscarRaza = new javax.swing.JTextField();
        Jlab_foto = new javax.swing.JLabel();

        jLabel1.setText("Cliente:");

        JLab_nombreCliente.setText("NombreCliente");

        JLab_cedula.setText("Celular");

        JLab_nomMascota.setText("Nombre Mascota:");

        jListRaza.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListRaza);

        jtxtA_descricpcion.setColumns(20);
        jtxtA_descricpcion.setRows(5);
        jScrollPane2.setViewportView(jtxtA_descricpcion);

        JLab_descripcion.setText("Descripcion:");

        btn_foto.setText("Foto Mascota");
        btn_foto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fotoActionPerformed(evt);
            }
        });

        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        jLabel3.setText("Raza:");

        jText_buscarRaza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText_buscarRazaKeyTyped(evt);
            }
        });

        Jlab_foto.setText("Foto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JLab_nomMascota)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JText_nomMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JLab_nombreCliente)
                                .addGap(18, 18, 18)
                                .addComponent(JLab_cedula)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(38, 38, 38)
                                .addComponent(jText_buscarRaza, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JLab_descripcion)
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_aceptar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_cancelar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(Jlab_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(JLab_nombreCliente)
                            .addComponent(JLab_cedula)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btn_foto)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLab_nomMascota)
                    .addComponent(JText_nomMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jText_buscarRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JLab_descripcion)
                                .addGap(84, 84, 84))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btn_aceptar)
                                        .addComponent(btn_cancelar)))
                                .addContainerGap(56, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Jlab_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jText_buscarRazaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_buscarRazaKeyTyped
        buscar(jText_buscarRaza);
    }//GEN-LAST:event_jText_buscarRazaKeyTyped

    private void btn_fotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fotoActionPerformed
        selecImagen();
    }//GEN-LAST:event_btn_fotoActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed

        limpiar();
        JInternalFrame[] allFrames = this.jPadre.getAllFrames();
        for (JInternalFrame jif : allFrames) {
            if (jif instanceof JIF_animal) {
                JIF_animal animal = (JIF_animal) jif;
                animal.cargarMascotas();

            }

        }
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        modificar();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_aceptarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLab_cedula;
    private javax.swing.JLabel JLab_descripcion;
    private javax.swing.JLabel JLab_nomMascota;
    private javax.swing.JLabel JLab_nombreCliente;
    private javax.swing.JTextField JText_nomMascota;
    private javax.swing.JLabel Jlab_foto;
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_foto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListRaza;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jText_buscarRaza;
    private javax.swing.JTextArea jtxtA_descricpcion;
    // End of variables declaration//GEN-END:variables

    public void cargarRazas() {
        List<String> razasApiRest = contC.getRazasDB();
        DefaultListModel dlm = new DefaultListModel();
        for (String raza : razasApiRest) {
            dlm.addElement(raza);
        }
        jListRaza.setModel(dlm);

        this.setModelo(dlm);
    }

    private void buscar(JTextField jtxt) {

        DefaultListModel modeln = (DefaultListModel) util.filtrarJList(jtxt.getText(), this.getModelo());
        jListRaza.setModel(modeln);
    }

    private void limpiar() {   //.setText(null);
        jtxtA_descricpcion.setText(null);
        jListRaza.clearSelection();
        Jlab_foto.setIcon(null);
        JText_nomMascota.setText(null);

    }

    private void selecImagen() {

        BufferedImage image = util.levantarImagen(JText_nomMascota);
        Jlab_foto.setIcon(new ImageIcon(image));
        Image scaledInstance = image.getScaledInstance(Jlab_foto.getWidth(), Jlab_foto.getHeight(), Image.SCALE_DEFAULT);
        Jlab_foto.setIcon(new ImageIcon(scaledInstance));
        fotoMascotaNueva = image;
    }

    private void cargarMascota() {
        this.msc = (mascota) contC.getMascota(idMascota);
        JText_nomMascota.setText(this.msc.getNombre());
        if (this.msc.getDescripcion() != null) {
            jtxtA_descricpcion.setText(this.msc.getDescripcion());
        }
        JLab_cedula.setText(this.msc.getCliente().getCorreo());
        JLab_nombreCliente.setText(this.msc.getCliente().getNombre() + " " + this.msc.getCliente().getApellido());
        jListRaza.setSelectedValue(this.msc.getRaza().getRaza(), true);
        System.err.println(msc.getFoto());
        levantarImg(msc.getFoto());
    }

    public DefaultListModel getModelo() {
        return dlm;
    }

    public void setModelo(DefaultListModel dlm) {
        this.dlm = dlm;
    }

    public boolean verificar() {

        if (JText_nomMascota.getText() == null) {
            JOptionPane.showConfirmDialog(this, "Debe ingresar un nombre de mascota!");
            JText_nomMascota.requestFocus();
            JText_nomMascota.selectAll();
            return false;
        }
        if (jListRaza.getSelectedValue() == null) {
            JOptionPane.showConfirmDialog(this, "Debe seleccionar una raza!");
            jListRaza.requestFocus();
            return false;
        }
        return true;

    }

    public void modificar() {
        if (verificar()) {
            int res = JOptionPane.showConfirmDialog(this, "Desea modificar la Mascota: " + JText_nomMascota.getText() + " ID: " + this.msc.getId());
            if (res == 0) {
                if (!this.msc.getNombre().equals(JText_nomMascota.getText())) {
                    this.msc.setNombre(JText_nomMascota.getText());
                }
                if (!this.msc.getRaza().getRaza().equals(jListRaza.getSelectedValue())) {
                    this.msc.setRaza(contC.getRaza(jListRaza.getSelectedValue()));
                }
                if (!this.msc.getDescripcion().equals(jtxtA_descricpcion.getText())) {
                    this.msc.setDescripcion(jtxtA_descricpcion.getText());
                }
                if (fotoMascotaNueva != null) {
                    this.msc.setFoto(rutaFoto + generarNombreFoto() + ".png");
                }
                boolean modificarAnimal = contC.modificarAnimal(this.msc);
                if (modificarAnimal) {
                    util.salvarImagen(fotoMascotaNueva, rutaFoto, generarNombreFoto(), 0);

                    JOptionPane.showMessageDialog(this, "Se ha modificado con exito la mascota!");
                    limpiar();
                    this.dispose();

                }
            }

        }

    }

    public void levantarImg(String rutImg) {
        BufferedImage image = (BufferedImage) util.dameEstaImagen(rutImg);
        Jlab_foto.setIcon(new ImageIcon(rutImg));
        Image scaledInstance = image.getScaledInstance(231, 184, Image.SCALE_DEFAULT);
        Jlab_foto.setIcon(new ImageIcon(scaledInstance));
        fotoMascota = image;
    }

    private String generarNombreFoto() {
        String nombre = "sample";
        nombre = "MASCOTA_" + JText_nomMascota.getText() + "_CLIENTE_" + msc.getCliente().getCorreo();
        return nombre;
    }
}
